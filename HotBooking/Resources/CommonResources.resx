<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="About HotBooking.com" xml:space="preserve">
    <value>About HotBooking.com</value>
  </data>
  <data name="Adults" xml:space="preserve">
    <value>Adults</value>
  </data>
  <data name="Arrival date" xml:space="preserve">
    <value>Arrival date</value>
  </data>
  <data name="Book hotels anywhere in the world" xml:space="preserve">
    <value>Book hotels anywhere in the world</value>
  </data>
  <data name="Careers" xml:space="preserve">
    <value>Careers</value>
  </data>
  <data name="Check prices" xml:space="preserve">
    <value>Check prices</value>
  </data>
  <data name="Children" xml:space="preserve">
    <value>Children</value>
  </data>
  <data name="Contact us" xml:space="preserve">
    <value>Contact us</value>
  </data>
  <data name="Copyright 2020 HotBooking.com All rights reserved." xml:space="preserve">
    <value>Copyright © 2020 HotBooking.com All rights reserved.</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="Customer support" xml:space="preserve">
    <value>Customer support</value>
  </data>
  <data name="Date of departure" xml:space="preserve">
    <value>Date of departure</value>
  </data>
  <data name="Distance from centre of" xml:space="preserve">
    <value>Distance from centre of</value>
  </data>
  <data name="Do not sell my personal information" xml:space="preserve">
    <value>Do not sell my personal information</value>
  </data>
  <data name="Facilities" xml:space="preserve">
    <value>Facilities</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Filter by:" xml:space="preserve">
    <value>Filter by:</value>
  </data>
  <data name="Hotel reviews" xml:space="preserve">
    <value>Hotel reviews</value>
  </data>
  <data name="Hotels name or city" xml:space="preserve">
    <value>Hotels name or city</value>
  </data>
  <data name="In a few seconds!!!" xml:space="preserve">
    <value>In a few seconds!!!</value>
  </data>
  <data name="Input hotels name or city" xml:space="preserve">
    <value>Input hotels name or city</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Less than 1km" xml:space="preserve">
    <value>Less than 1km</value>
  </data>
  <data name="Less than 3km" xml:space="preserve">
    <value>Less than 3km</value>
  </data>
  <data name="Less than 5km" xml:space="preserve">
    <value>Less than 5km</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="News" xml:space="preserve">
    <value>News</value>
  </data>
  <data name="Privacy statement" xml:space="preserve">
    <value>Privacy statement</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Register object" xml:space="preserve">
    <value>Register object</value>
  </data>
  <data name="Room facilities" xml:space="preserve">
    <value>Room facilities</value>
  </data>
  <data name="Rooms" xml:space="preserve">
    <value>Rooms</value>
  </data>
  <data name="Send review about HotBooking.com" xml:space="preserve">
    <value>Send review about HotBooking.com</value>
  </data>
  <data name="Service guarantee" xml:space="preserve">
    <value>Service guarantee</value>
  </data>
  <data name="star" xml:space="preserve">
    <value>star</value>
  </data>
  <data name="Star rating" xml:space="preserve">
    <value>Star rating</value>
  </data>
  <data name="stars" xml:space="preserve">
    <value>stars</value>
  </data>
  <data name="Terms &amp; conditions" xml:space="preserve">
    <value>Terms &amp; conditions</value>
  </data>
  <data name="Unrated" xml:space="preserve">
    <value>Unrated</value>
  </data>
  <data name="Website feedback" xml:space="preserve">
    <value>Website feedback</value>
  </data>
  <data name="What people are saying" xml:space="preserve">
    <value>What people are saying</value>
  </data>
  <data name="Your budget (per night)" xml:space="preserve">
    <value>Your budget (per night)</value>
  </data>
  <data name="Your opinion" xml:space="preserve">
    <value>Your opinion</value>
  </data>
</root>